apply plugin: 'com.android.application'
apply plugin: 'realm-android'
//apply plugin：’×××’：叫做二进制插件，二进制插件一般都是被打包在一个jar里独立发布的，比如我们自定义的插件，再发布的时候我们也可以为其指定plugin id，这个plugin id最好是一个全限定名称，就像你的包名一样；
//apply from：’×××’：叫做应用脚本插件，其实这不能算一个插件，它只是一个脚本。应用脚本插件，其实就是把这个脚本加载进来，和二进制插件不同的是它使用的是from关键字.后面紧跟的坫一个脚本文件，可以是本地的，也可以是网络存在的，如果是网络上的话要使用HTTP URL.
android {//android插件提供的一个扩展类型，可以让我们自定义Android Gradle工程，是Android Gradle工程配置的唯一入口
    compileSdkVersion rootProject.ext.android.compileSdkVersion //编译所依赖的Android SDK的版本
    buildToolsVersion rootProject.ext.android.buildToolsVersion
    defaultConfig {//defaultConfig是默认的配置，它是一个ProductFlavor。ProductFlavor允许我们根据不同的情况同时生成多个不同的apk包
        applicationId rootProject.ext.android.applicationId
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode rootProject.ext.android.versionCode
        versionName rootProject.ext.android.versionName
        multiDexEnabled true//  65535
//        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {//用在代码混淆
        release {
            minifyEnabled false//是否混淆
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'//混淆文件
        }
    }
}

dependencies {
    api fileTree(dir: 'libs', include: ['*.jar'])//本地libs文件夹下的扩展名为jar的都会被依赖
    api rootProject.ext.dependencies["appcompat-v7"]
    api rootProject.ext.dependencies["design"]
    api rootProject.ext.dependencies["multidex"]
    api 'com.android.support.constraint:constraint-layout:1.1.3'

    //rx
    api rootProject.ext.dependencies["rxjava"]
    api rootProject.ext.dependencies["rxandroid"]

    //di
    api rootProject.ext.dependencies["dagger"]
    annotationProcessor rootProject.ext.dependencies["dagger-compiler"]
    api rootProject.ext.dependencies["butterknife"]
    api rootProject.ext.dependencies["annotation"]
    annotationProcessor rootProject.ext.dependencies["butterknife-compiler"]

    //network
    api rootProject.ext.dependencies["gson"]
    api rootProject.ext.dependencies["retrofit"]
    api rootProject.ext.dependencies["retrofit-converter-gson"]
    api rootProject.ext.dependencies["retrofit-adapter-rxjava2"]
    api rootProject.ext.dependencies["okhttp"]
    api rootProject.ext.dependencies["okhttp-logging-interceptor"]

    api rootProject.ext.dependencies["glide"]// glide 依赖
    annotationProcessor rootProject.ext.dependencies["glide-compiler"]// glide 相关注解，生成GlideApp代码
    api (rootProject.ext.dependencies["glide-okhttp3-integration"]) {// Glide网络库配置成okhttp3
        transitive = false
    }

    api rootProject.ext.dependencies["jsoup"]

    //recycleview
    api rootProject.ext.dependencies["cardview-v7"]
    api rootProject.ext.dependencies["recyclerview-v7"]
    api rootProject.ext.dependencies["brvah"]

//    testImplementation 'junit:junit:4.12'
//    androidTestImplementation 'com.android.support.test:runner:1.0.2'
//    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
}
